
# services:
#   nats:
#     image: nats:latest
#     ports:
#       - "4222:4222"  # Client port
#       - "8222:8222"  # HTTP monitoring
#     networks:
#       - shared-network
#     restart: always

#   # API Gateway của dự án (microservices)
#   api-gateway:
#     build:
#       context: ./backend-microservices
#       dockerfile: ./apps/api-gateway/Dockerfile
#     ports:
#       - "3100:3000"
#     environment:
#       - USERS_CLIENT_HOST=users-service
#       - CORS_ORIGIN=*
#       - WS_PORT=3000
#       - USER_CLIENT_PORT=3101
#       - ROOMS_CLIENT_HOST=rooms-service
#       - ROOMS_CLIENT_PORT=3102
#       - COMPUTERS_CLIENT_HOST=computers-service
#       - COMPUTERS_CLIENT_PORT=3103
#       - JWT_SECRET=your_super_secret_jwt_key
#       - JWT_REFRESH_SECRET=your_super_secret_refresh_key
#       - JWT_EXPIRES_IN=15m
#       - JWT_REFRESH_EXPIRES_IN=7d
#       - JWT_REMEMBER_ME_EXPIRES_IN=30d
#       - MAX_SESSIONS_PER_USER=5
#       - NATS_URL=nats://nats:4222
#       - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
#     depends_on:
#       users-service:
#         condition: service_started
#       rooms-service:
#         condition: service_started
#       computers-service:
#         condition: service_started
#     networks:
#       - shared-network
#     volumes:
#       - uploads_data:/app/uploads
#     restart: unless-stopped

#   # Microservices của dự án
#   users-service:
#     build:
#       context: ./backend-microservices
#       dockerfile: ./apps/user-service/Dockerfile
#     environment:
#       - HOST=0.0.0.0
#       - JWT_SECRET=your_super_secret_jwt_key
#       - JWT_REFRESH_SECRET=your_super_secret_refresh_key
#       - JWT_EXPIRES_IN=15m
#       - JWT_REFRESH_EXPIRES_IN=7d
#       - JWT_REMEMBER_ME_EXPIRES_IN=30d
#       - MAX_SESSIONS_PER_USER=5
#       - NATS_URL=nats://nats:4222
#       - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
#     networks:
#       - shared-network
#     volumes:
#       - uploads_data:/app/uploads
#     depends_on:
#       nats:
#         condition: service_started
#     restart: unless-stopped

#   rooms-service:
#     build:
#       context: ./backend-microservices
#       dockerfile: ./apps/room-service/Dockerfile
#     environment:
#       - HOST=0.0.0.0
#       - NATS_URL=nats://nats:4222
#       - JWT_SECRET=your_super_secret_jwt_key
#       - JWT_REFRESH_SECRET=your_super_secret_refresh_key
#       - JWT_EXPIRES_IN="15m"
#       - JWT_REFRESH_EXPIRES_IN=7d
#       - JWT_REMEMBER_ME_EXPIRES_IN=30d
#       - MAX_SESSIONS_PER_USER=5
#       - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
#     networks:
#       - shared-network
#     volumes:
#       - uploads_data:/app/uploads
#     depends_on:
#       nats:
#         condition: service_started
#     restart: unless-stopped

#   computers-service:
#     build:
#       context: ./backend-microservices
#       dockerfile: ./apps/computer-service/Dockerfile
#     environment:
#       - HOST=0.0.0.0
#       - JWT_SECRET=your_super_secret_jwt_key
#       - JWT_REFRESH_SECRET=your_super_secret_refresh_key
#       - JWT_EXPIRES_IN=15m
#       - JWT_REFRESH_EXPIRES_IN=7d
#       - JWT_REMEMBER_ME_EXPIRES_IN=30d
#       - MAX_SESSIONS_PER_USER=5
#       - NATS_URL=nats://nats:4222
#       - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
#     networks:
#       - shared-network
#     volumes:
#       - uploads_data:/app/uploads
#     depends_on:
#       nats:
#         condition: service_started
#     restart: unless-stopped

#   # Frontend với Nginx tích hợp
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "80:80"
#     depends_on:
#       api-gateway:
#         condition: service_started
#     environment:
#       - VITE_API_URL=/api
#       - VITE_SOCKET_URL=/socket.io
#     networks:
#       - shared-network
#     restart: unless-stopped

# networks:
#   shared-network:
#     driver: bridge

# volumes:
#   uploads_data:
#     driver: local

version: '3.8'

services:
  frontend:
    image: 192.168.56.10:5000/my-frontend-image:10.0
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=/api
      - VITE_SOCKET_URL=/socket.io
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - "80:80"

  api-gateway:
    image: 192.168.56.10:5000/my-api-gateway-image:latest
    build:
      context: ./backend-microservices
      dockerfile: ./apps/api-gateway/Dockerfile
    environment:
      - USERS_CLIENT_HOST=user-service
      - CORS_ORIGIN=*
      - WS_PORT=3000
      - USER_CLIENT_PORT=3101
      - ROOMS_CLIENT_HOST=room-service
      - ROOMS_CLIENT_PORT=3102
      - COMPUTERS_CLIENT_HOST=computer-service
      - COMPUTERS_CLIENT_PORT=3103
      - JWT_SECRET=your_super_secret_jwt_key
      - JWT_REFRESH_SECRET=your_super_secret_refresh_key
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - JWT_REMEMBER_ME_EXPIRES_IN=30d
      - MAX_SESSIONS_PER_USER=5
      - NATS_URL=nats://nats:4222
      - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - "3100:3000"

  users-service:
    image: 192.168.56.10:5000/my-user-service-image:latest
    build:
      context: ./backend-microservices
      dockerfile: ./apps/user-service/Dockerfile
    environment:
      - HOST=0.0.0.0
      - JWT_SECRET=your_super_secret_jwt_key
      - JWT_REFRESH_SECRET=your_super_secret_refresh_key
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - JWT_REMEMBER_ME_EXPIRES_IN=30d
      - MAX_SESSIONS_PER_USER=5
      - NATS_URL=nats://nats:4222
      - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 5
      placement:
        constraints:
          - node.hostname == worker1

  rooms-service:
    image: 192.168.56.10:5000/my-room-service-image:latest
    build:
      context: ./backend-microservices
      dockerfile: ./apps/room-service/Dockerfile
    environment:
      - HOST=0.0.0.0
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=your_super_secret_jwt_key
      - JWT_REFRESH_SECRET=your_super_secret_refresh_key
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - JWT_REMEMBER_ME_EXPIRES_IN=30d
      - MAX_SESSIONS_PER_USER=5
      - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
      placement:
        constraints:
          - node.hostname == worker1

  computers-service:
    image: 192.168.56.10:5000/my-computer-service-image:latest
    volumes:
      - uploads_data:/app/uploads
    build:
      context: ./backend-microservices
      dockerfile: ./apps/computer-service/Dockerfile
    environment:
      - HOST=0.0.0.0
      - JWT_SECRET=your_super_secret_jwt_key
      - JWT_REFRESH_SECRET=your_super_secret_refresh_key
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - JWT_REMEMBER_ME_EXPIRES_IN=30d
      - MAX_SESSIONS_PER_USER=5
      - NATS_URL=nats://nats:4222
      - DATABASE_URL=postgresql://practice_room_ms_db_owner:npg_kYzrTm3o0eWH@ep-calm-dawn-a4vuck6a-pooler.us-east-1.aws.neon.tech/practice_room_ms_db?sslmode=require
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 5
      placement:
        constraints:
          - node.hostname == worker2

  nats:
    image: nats:latest
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == worker3
    ports:
      - "4222:4222" 
      - "8222:8222" 

networks:
  app-network:
    driver: overlay
    attachable: true

volumes:
  uploads_data:
    driver: local

